service: f1

frameworkVersion: '4'

provider:
  name: aws
  runtime: nodejs18.x
  region: eu-west-2
  stage: ${opt:stage, 'production'}

plugins:
  - serverless-s3-sync
  - serverless-cloudfront-invalidate

custom:
  cloudfront:
    hostedZoneId: ${env:HOSTED_ZONE_ID}
    certArn: ${env:CERT_ARN}
  s3Sync:
    - bucketName: ${self:service}-${self:provider.stage}-website
      localDir: dist
      deleteRemoved: true
      followSymlinks: true
  cloudfrontInvalidate:
    - distributionId: E3AYKH9Y9578GO
      autoInvalidate: true
      items:
        - /*

resources:
  - Resources:
      WebsiteBucket:
        Type: AWS::S3::Bucket
        Properties:
          BucketName: ${self:service}-${self:provider.stage}-website
          WebsiteConfiguration:
            IndexDocument: index.html
            ErrorDocument: error.html
          PublicAccessBlockConfiguration:
            BlockPublicAcls: true
            BlockPublicPolicy: true
            IgnorePublicAcls: true
            RestrictPublicBuckets: true

      CloudFrontOAI:
        Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
        Properties:
          CloudFrontOriginAccessIdentityConfig:
            Comment: OAI for ${self:service} website

      WebsiteBucketPolicy:
        Type: AWS::S3::BucketPolicy
        Properties:
          Bucket: !Ref WebsiteBucket
          PolicyDocument:
            Statement:
              - Effect: Allow
                Principal:
                  CanonicalUser: !GetAtt CloudFrontOAI.S3CanonicalUserId
                Action: s3:GetObject
                Resource:
                  !Join ['', ['arn:aws:s3:::', !Ref WebsiteBucket, '/*']]

      WebsiteDistribution:
        Type: AWS::CloudFront::Distribution
        Properties:
          DistributionConfig:
            Comment: ${self:service} website distribution
            Enabled: true
            DefaultRootObject: index.html
            Aliases:
              - f1.gavinlc.co.uk
            Origins:
              - DomainName: !GetAtt WebsiteBucket.RegionalDomainName
                Id: S3Origin
                S3OriginConfig:
                  OriginAccessIdentity:
                    !Join [
                      '',
                      [
                        'origin-access-identity/cloudfront/',
                        !Ref CloudFrontOAI,
                      ],
                    ]
            DefaultCacheBehavior:
              TargetOriginId: S3Origin
              ViewerProtocolPolicy: redirect-to-https
              AllowedMethods:
                - GET
                - HEAD
                - OPTIONS
              CachedMethods:
                - GET
                - HEAD
                - OPTIONS
              ForwardedValues:
                QueryString: false
                Cookies:
                  Forward: none
              MinTTL: 0
              DefaultTTL: 86400
              MaxTTL: 31536000
            PriceClass: PriceClass_100
            ViewerCertificate:
              AcmCertificateArn: ${self:custom.cloudfront.certArn}
              SslSupportMethod: sni-only
              MinimumProtocolVersion: TLSv1.2_2021
            CustomErrorResponses:
              - ErrorCode: 403
                ResponseCode: 200
                ResponsePagePath: /index.html
                ErrorCachingMinTTL: 0

      DnsRecord:
        Type: AWS::Route53::RecordSet
        Properties:
          HostedZoneId: ${self:custom.cloudfront.hostedZoneId}
          Name: f1.gavinlc.co.uk
          Type: A
          AliasTarget:
            DNSName: !GetAtt WebsiteDistribution.DomainName
            HostedZoneId: Z2FDTNDATAQYW2

  - Outputs:
      WebsiteBucketName:
        Description: Name of the S3 bucket
        Value: !Ref WebsiteBucket

      WebsiteDistributionId:
        Description: ID of the CloudFront distribution
        Value: !Ref WebsiteDistribution

      WebsiteDistributionDomain:
        Description: Domain name of the CloudFront distribution
        Value: !GetAtt WebsiteDistribution.DomainName
